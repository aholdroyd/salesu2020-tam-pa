apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pingaccess-admin-ingress
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/ingress.class: nginx-public
    # Possible fix for some 502 failures on admin assets and api requests.
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  tls:
  - hosts:
    - pingaccess-admin-ttran.ping-devops.com
    secretName: tls-secret
  rules:
  - host: pingaccess-admin-ttran.ping-devops.com
    http:
      paths:
      # This rule gives internal access to the pingaccess admin services.
      - path: /
        backend:
          serviceName: pingaccess
          servicePort: 9000

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pingaccess-ingress
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/ingress.class: nginx-public
    # Possible fix for some 502 failures on admin assets and api requests.
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  tls:
  - hosts:
    - pingaccess-ttran.ping-devops.com
    secretName: tls-secret
  rules:
  - host: pingaccess-ttran.ping-devops.com
    http:
      paths:
      # This rule gives internal access to the pingaccess admin services.
      - path: /
        backend:
          serviceName: pingaccess
          servicePort: 443

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pingaccess-apac-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    kubernetes.io/ingress.class: nginx-public
    # Possible fix for some 502 failures on admin assets and api requests.
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
  - host: sso.pingapac.com
    http:
      paths:
      # This rule gives internal access to the pingaccess admin services.
      - path: /
        backend:
          serviceName: pingaccess
          servicePort: 443
